{
  "usememo": {
    "prefix": "usememo",
    "body": [
      "import React, { useMemo } from 'react';",
      "",
      "function ExpensiveComponent({ data }: { data: number[] }) {",
      "  const sum = useMemo(() => {",
      "    return data.reduce((acc, val) => acc + val, 0);",
      "  }, [data]);",
      "",
      "  return <p>Sum: {sum}</p>;",
      "}"
    ]
  },
  "button": {
    "prefix": "button",
    "body": [
      "<button onClick={${1:handleClick}}>${2:clickme}</button>"
    ]
  },
  "form": {
    "prefix": "form",
    "body": [
      "<Form method=\"post\">",
      "</Form>"
    ]
  },
  "input": {
    "prefix": "input",
    "body": [
      "<input",
      "  placeholder=\"Last\"",
      "  aria-label=\"Last name\"",
      "  type=\"text\"",
      "  name=\"last\"",
      "  defaultValue={contact.last}",
      "/>"
    ]
  },
  "submit": {
    "prefix": "submit",
    "body": [
      "<button type=\"submit\">Save</button>"
    ]
  },
  "div": {
    "prefix": "div",
    "body": [
      "<div>",
      "  ${1:}",
      "</div>"
    ]
  },
  "ul": {
    "prefix": "ul",
    "body": [
      "<ul>",
      "  ${1}",
      "</ul>"
    ]
  },
  "exp": {
    "prefix": [
      "exp",
      "export"
    ],
    "body": [
      "export default function ${1}() {",
      "  ${2}",
      "}"
    ]
  },
  "import": {
    "prefix": [
      "import",
      "imp"
    ],
    "body": [
      "import ${1} from '${2}';"
    ]
  },
  "log": {
    "prefix": "log",
    "body": [
      "console.log(\"${1}\", ${2});"
    ]
  },
  "react": {
    "prefix": "react",
    "body": [
      "import React from 'react';"
    ]
  },
  "link": {
    "prefix": "link",
    "body": [
      "<Link to={`${1}`}>${2}</Link>"
    ]
  },
  "loader": {
    "prefix": "loader",
    "body": [
      "export async function loader() {",
      "  const ${1} = await get${2}();",
      "  return { ${1} };",
      "}"
    ]
  },
  "action": {
    "prefix": "action",
    "body": [
      "export async function action() {",
      "  const ${1} = await create${1}();",
      "  return redirect(`${3}`);",
      "}"
    ]
  },
  "li": {
    "prefix": "li",
    "body": [
      "<li>",
      "  ${1:content}",
      "</li>"
    ]
  },
  "post": {
    "prefix": "post",
    "body": [
      "try {",
      "  const data = {",
      "    name: updates.name,",
      "    done: 'false',",
      "  };",
      "  const response = await fetch('/todos', {",
      "    method: 'POST',",
      "    headers: {",
      "      \"Content-Type\": \"application/json\",",
      "      \"X-CSRF-Token\": document.querySelector(\"meta[name='csrf-token']\").content,",
      "    },",
      "    body: JSON.stringify(data),",
      "  })",
      "",
      "  if (!response.ok) {",
      "    throw new Error(`HTTP error! Status: ${response.status}`);",
      "  } ",
      "",
      "  const responseData = await response.json();",
      "  console.log(\"responseData: \", responseData);",
      "  return responseData;",
      "} catch(e) {",
      "  console.log(\"Error: \", e);",
      "}"
    ]
  },
  "get": {
    "prefix": "get",
    "body": [
      "try {",
      "  const response = await fetch('/todos', {",
      "    method: 'GET',",
      "    headers: {",
      "      \"Content-Type\": \"application/json\",",
      "      \"X-CSRF-Token\": document.querySelector(\"meta[name='csrf-token']\").content,",
      "    }",
      "  })",
      "",
      "  if (!response.ok) {",
      "    throw new Error(`HTTP error! Status: ${response.status}`);",
      "  } ",
      "",
      "  const responseData = await response.json();",
      "  console.log(\"responseData: \", responseData);",
      "  return responseData;",
      "} catch(e) {",
      "  console.log(\"Error: \", e);",
      "}"
    ]
  },
  "afun": {
    "prefix": "afun",
    "body": [
      "(${1:}) => {",
      "  ${2:}",
      "}"
    ]
  },
  "comment": {
    "prefix": "comment",
    "body": [
      "{/**/}"
    ]
  },
  "usestate": {
    "prefix": "usestate",
    "body": [
      "const [${1:state}, ${2:function}] = useState(${3:initialValue});"
    ]
  },
  "h2": {
    "prefix": "h2",
    "body": [
      "<h2>${1:value}</h2>"
    ]
  },
  "fun": {
    "prefix": "fun",
    "body": [
      "function ${1:}(${2:}) {",
      "  ${3:}",
      "}"
    ]
  }
}