{
  "usememo": {
    "prefix": "usememo",
    "body": [
      "import React, { useMemo } from 'react';",
      "",
      "function ExpensiveComponent({ data }: { data: number[] }) {",
      "  const sum = useMemo(() => {",
      "    return data.reduce((acc, val) => acc + val, 0);",
      "  }, [data]);",
      "",
      "  return <p>Sum: {sum}</p>;",
      "}"
    ]
  },
  "usecallback": {
    "prefix": "usecallback",
    "body": [
      "const callbackAtualizado = useCallback(() => {",
      "    console.log('callbackAtualizado:', contador);",
      "}, [contador]);"
    ]
  },
  "if": {
    "prefix": "if",
    "body": [
      "if(${1:}) {",
      "    ${2:}",
      "}"
    ]
  },
  "usestate": {
    "prefix": "usestate",
    "body": [
      "import { useState, useContext } from \"react\";",
      "const [mystate, setMyState] = useState(\"something else\");",
      "setMyState(\"Hello World\");"
    ]
  },
  "fun": {
    "prefix": "fun",
    "body": [
      "function NewComponent() {",
      "  return (",
      "    <p>hello</p>",
      "  )",
      "}"
    ]
  },
  "state": {
    "prefix": "state",
    "body": [
      "import { useState } from \"react\";",
      "const [${1:state}, ${2:setState}] = useState(${3:initialState});"
    ]
  },
  "map": {
    "prefix": "map",
    "body": [
      "{(",
      "  ${1:list}.map((${2:item}) => {",
      "    return (",
      "      <li key={${2:item}.id}>",
      "        {${2:item}.name}",
      "      </li>",
      "    )",
      "  })",
      ")}"
    ]
  },
  "button": {
    "prefix": "button",
    "body": [
      "<button onClick={() => {",
      "  ${1:console.log('button')}",
      "}}>${2:name}</button>"
    ]
  }
}