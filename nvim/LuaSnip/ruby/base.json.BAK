{"before":{"prefix":"before","body":["before do","end"],"description":"before"},"let":{"prefix":"let","body":["let(:context) { double }"],"description":"let"},"test":{"prefix":"test","body":["require_relative '../../spec_helper'","","RSpec.describe PaccarRDSIntegration::Functions::QueueAccounts do","end"],"description":"test"},"struct":{"prefix":"struct","body":["authentication = Struct.new(:param1, :param2) do","      def success?","        true","      end","","      def identity","        UserIdentify.all.first","      end","","      def dealer_id","        Dealer.all.first","      end","    end"],"description":"struct"},"read line by line":{"prefix":"read","body":["file_path = './humio-logs.txt'\n$0","if File.exist?(file_path)","File.open(file_path, 'r') do |file|","file.each_line do |line|","puts line","end","end","else","puts 'error'","end"],"description":"reads a file line by line"},"begin rescue":{"prefix":["beg","begin"],"body":["begin","rescue StandardError => e","puts 'An error occurred'","end"],"description":"begin and rescue"},"write":{"prefix":"write","body":["File.open(snippet_path, 'w') do |file|","  file.write(JSON.generate(parsed_data))","end"]}}
